version: "3"

services:
  init-dhparams:
    image: docker.io/certbot/certbot
    restart: "no"
    entrypoint: /bin/sh
    command: -c 'test -f /etc/letsencrypt/ssl-dhparams.pem || openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 4096'
    volumes:
      - cert_volume:/etc/letsencrypt:Z
    networks:
      - my_network

  certbot-oneshot:
    image: docker.io/certbot/certbot
    restart: "no"
    entrypoint: /bin/sh
    command: -c 'test -d /etc/letsencrypt/live/project-mh.ddns.net || certbot certonly --standalone --register-unsafely-without-email -d "project-mh.ddns.net,www.project-mh.ddns.net" --rsa-key-size 2048 --agree-tos --force-renewal'
    ports:
      - 80:80
    volumes:
      - cert_volume:/etc/letsencrypt:Z
    networks:
      - my_network

  nginx:
    image: docker.io/library/nginx
    entrypoint: /bin/sh
    command: -c 'while :; do sleep 6h && wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'
    ports:
      - 80:80
      - 443:443
    depends_on:
      - init-dhparams
      - certbot-oneshot
    networks:
      - my_network
    volumes:
      - cert_volume:/etc/letsencrypt:Z
      - acme_challenge:/usr/share/nginx/html/.well-known:Z
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]  # Проверка доступности Nginx
      interval: 30s
      timeout: 10s
      retries: 5

  project-mh:
    image: alexeysubudaev/project-mh
    container_name: project-mh
    restart: always
    depends_on:
      - init-dhparams
      - certbot-oneshot
    networks:
      - my_network
    env_file:
      - ./.env

  certbot:
    image: docker.io/certbot/certbot
    entrypoint: /bin/sh
    command: -c 'trap exit TERM; while :; do certbot renew; sleep 24h && wait $${!}; done;'
    depends_on:
      - nginx
    volumes:
      - cert_volume:/etc/letsencrypt:Z
      - acme_challenge:/usr/share/nginx/html/.well-known:Z

volumes:
  cert_volume: {}
  acme_challenge: {}

networks:
  my_network:
